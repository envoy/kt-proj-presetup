#!/bin/bash
# bin/compile <build-dir> <cache-dir> <env-dir>

set -e

workingDir=$(pwd)

mkdir -p agent
mkdir -p cert

buildDir=$(cd "$1/" && pwd)
cacheDir=$(cd "$2/" && pwd)
envDir=$(cd "$3/" && pwd)

main() {
    validateEnvironment
    downloadCertificates
    downloadDatadogJavaAgent
}

downloadCertificates() {
    local resource="/${AWS_S3_CERT_BUCKET}/${AWS_S3_CERT_FILENAME}"
    local contentType="application/x-pkcs12"
    local dateValue="`date +'%a, %d %b %Y %H:%M:%S %z'`"
    local stringToSign="GET\n\n${contentType}\n${dateValue}\n${resource}"
    local signature=`/bin/echo -en "$stringToSign" | openssl sha1 -hmac ${AWS_SECRET_ACCESS_KEY} -binary | base64`

    curl -H "Host: ${AWS_S3_CERT_BUCKET}.s3.amazonaws.com" \
        -H "Date: ${dateValue}" \
        -H "Content-Type: ${contentType}" \
        -H "Authorization: AWS ${AWS_ACCESS_KEY_ID}:${signature}" \
        https://${AWS_S3_CERT_BUCKET}.s3.amazonaws.com/${AWS_S3_CERT_FILENAME}
}

downloadDatadogJavaAgent() {
    wget -O agent/dd-java-agent.jar https://dtdg.co/latest-java-tracer
}

validateEnvironment() {
    if [ -z "${AWS_ACCESS_KEY_ID-}"  ]; then
        echo "Missing AWS Access Credentials - AWS_ACCESS_KEY_ID"
        exit 1
    fi

    if [ -z "${AWS_SECRET_ACCESS_KEY-}" ]; then
        echo "Missing AWS Access Credentials - AWS_SECRET_ACCESS_KEY"
        exit 1
    fi

    if [ -z "${AWS_S3_CERT_BUCKET-}" ]; then
        echo "Missing Certificate S3 Bucket - AWS_S3_CERT_BUCKET"
        exit 1
    fi

    if [ -z "${AWS_S3_CERT_FILENAME-}" ]; then
        echo "Missing Certificate File Name - AWS_S3_CERT_FILENAME"
        exit 1
    fi

    if [ -z "${CERT_OUTPUT_PATH-}" ]; then
        echo "Missing Certificate Output Path - CERT_OUTPUT_PATH"
        exit 1
    fi
}

main
